# Copyright (c) 2020 Raphael Pothin.
# Licensed under the MIT License.

name: 0-test

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
      - uses: actions/checkout@v2

      - name: Get Power Apps CLI
        run: |
          nuget install "Microsoft.PowerApps.CLI" -Version  "1.7.4" -OutputDirectory "pac"
          
          $pacNugetFolder = Get-ChildItem $outFolder | Where-Object {$_.Name -match $nugetPackage + "."}
          $pacPath = $pacNugetFolder.FullName + "\tools"
          
          echo "pacPath=$pacPath" >> $Env:GITHUB_ENV
        shell: pwsh

      - name: Unpack canvas app source files
        run: |
          $env:PATH = $env:PATH + ";" + "${{ env.pacPath }}"

          pac help

          Get-ChildItem -Path "Solutions/PowerPlatformALMWithGitHub" -Recurse -Filter *.msapp | 
          ForEach-Object {
            $unpackedPath = $_.FullName.Replace(".msapp", "_msapp_src")
            pac canvas unpack --msapp $_.FullName --sources $unpackedPath
            del $_.FullName
          }
        shell: pwsh

      - name: test
        run: |
          $env:PATH = $env:PATH + ";" + "${{ env.pacPath }}"

          pac help
        shell: pwsh

      - name: Pack msapp files
        run: |
          $env:PATH = $env:PATH + ";" + "${{ env.pacPath }}"

          pac help

          Get-ChildItem -Path "Solutions/${{ env.solution_name }}" -Recurse -Filter *_src | 
          ForEach-Object {     
            $unpackedPath = $_.FullName
            $packedFileName = $unpackedPath.Replace("_msapp_src", ".msapp")
            $env:PATH = $env:PATH + ";" + "${{ env.pacPath }}"
            pac canvas pack --sources $unpackedPath --msapp $packedFileName
            Remove-Item -Path $unpackedPath -Recurse
          }
        shell: pwsh