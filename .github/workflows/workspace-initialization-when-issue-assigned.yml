name: 1-workspace-initialization-when-issue-assigned
# Create a branch and generate a Dataverse Dev environment when an issue is assigned in GitHub

# Workflow triggered when an issue is labeled is a specific label (in our case 'work in progress')
on:
  issues:
    types: [labeled]

env:
  branch_name: ${{ secrets.BRANCH_NAME_BASE }}${{ github.event.issue.number }} # Name of the new dev branch
  dataverse_dev_environment_display_name: ${{ secrets.DATAVERSE_DEV_ENVIRONMENT_DISPLAY_NAME_BASE }}${{ github.event.issue.number }} # Display name for the new Dataverse Dev environment
  dataverse_dev_environment_domain_name: ${{ secrets.DATAVERSE_DEV_ENVIRONMENT_DOMAIN_NAME_BASE }}${{ github.event.issue.number }} # Domain name for the new Dataverse Dev environment

jobs:
  # Job for the creation of the new dev branch
  create-issue-development-branch:
    if: contains(github.event.issue.labels.*.name, 'work in progress') && !contains(github.event.issue.labels.*.name, 'dev env created')
    runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    # Create the new dev branch
    #   GitHub Action on the Marketplace: https://github.com/marketplace/actions/create-branch
    - uses: peterjgrainger/action-create-branch@v2.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: ${{ env.branch_name }}

    # Add "Branch created" comment to the issue
    - name: Branch created comment on issue
      uses: peter-evans/create-or-update-comment@v1
      with:
        issue-number: ${{ github.event.issue.number }}
        body: |
          âœ¨Branch created!

  # Job for the creation of the new Dataverse Dev environment
  create-dataverse-dev-environment:
    if: contains(github.event.issue.labels.*.name, 'work in progress') && !contains(github.event.issue.labels.*.name, 'dev env created')
    runs-on: ubuntu-latest
    env:
      dataverse_environment_sku: Sandbox # SKU for the new Dataverse Dev environment (Allowed values: Production, Sandbox, Trial or SubscriptionBasedTrial)
      RUNNER_DEBUG: 1

    steps:
    # Create the new Dataverse Dev environment
    #   Microsoft action: https://github.com/microsoft/powerplatform-actions/blob/main/create-environment/action.yml
    - name: Create environment
      uses: microsoft/powerplatform-actions/create-environment@main
      with:
        app-id: ${{ secrets.APPLICATION_ID }}
        client-secret: ${{ secrets.CLIENT_SECRET }}
        tenant-id: ${{ secrets.TENANT_ID }}
        name: ${{ env.dataverse_dev_environment_display_name }}
        region: ${{ secrets.DATAVERSE_ENVIRONMENT_REGION }}
        type: ${{ env.dataverse_environment_sku }}
        currency: ${{ secrets.DATAVERSE_ENVIRONMENT_CURRENCY_NAME }}
        language: ${{ secrets.DATAVERSE_ENVIRONMENT_LANGUAGE_NAME }}
        domain: ${{ env.dataverse_dev_environment_domain_name }}

    # Add the 'dev env created' label to the current issue
    #   GitHub Action on the Marketplace: https://github.com/marketplace/actions/simple-issue-labeler
    - name: Add 'dev env created' label
      uses: andymckay/labeler@master
      with:
        add-labels: 'dev env created'

    # Add "Environment created" comment to the issue
    - name: Environment created comment on issue
      uses: peter-evans/create-or-update-comment@v1
      with:
        issue-number: ${{ github.event.issue.number }}
        body: |
          ðŸŽ‰ Environment created!

    # Set dataverse_dev_environment_url environment variable for later use in the workflow
    - name: Set dataverse_dev_environment_url
      run: echo ::set-env name=dataverse_dev_environment_url::https://${{ env.dataverse_dev_environment_domain_name }}${{ secrets.DATAVERSE_ENVIRONMENT_URL_BASE }}

  # Job for the import of the version of the solution in the main branch to the new Dataverse Dev environment
  #   Enable this job only after the initialization of the solution in the repository
  import-solution-to-dev-environment:
    needs: create-dataverse-dev-environment
    environment:
      name: dev_environment
      url: ${{ env.dataverse_dev_environment_url }}
    runs-on: ubuntu-latest
    env:
      solution_name: PowerPlatformALMWithGitHub # Name of the considered solution
      RUNNER_DEBUG: 1

    steps:
    # Action used to checkout the repository
    #   Community action: https://github.com/actions/checkout
    - uses: actions/checkout@v2

    # Pack the solution as unmanaged
    #   Microsoft action: https://github.com/microsoft/powerplatform-actions/blob/main/pack-solution/action.yml
    - name: Pack solution
      uses: microsoft/powerplatform-actions/pack-solution@main
      with:
        solution-folder: Solutions/${{ env.solution_name }}
        solution-file: out/Solutions/${{ env.solution_name }}.zip
        solution-type: Unmanaged

    # Import the solution as unmanaged to the new Dataverse Dev environment
    #   Microsoft action: https://github.com/microsoft/powerplatform-actions/blob/main/import-solution/action.yml
    - name: Import solution as unmanaged to Dev
      uses: microsoft/powerplatform-actions/import-solution@main
      with:
        app-id: ${{ secrets.APPLICATION_ID }}
        client-secret: ${{ secrets.CLIENT_SECRET }}
        tenant-id: ${{ secrets.TENANT_ID }}
        environment-url: https://${{ env.dataverse_dev_environment_domain_name }}${{ secrets.DATAVERSE_ENVIRONMENT_URL_BASE }}
        solution-file: out/Solutions/${{ env.solution_name }}.zip
        force-overwrite: true
        publish-changes: true
        skip-dependency-check: false

    # Add "Solution imported" comment to the issue
    - name: Solution imported comment on issue
      uses: peter-evans/create-or-update-comment@v1
      with:
        issue-number: ${{ github.event.issue.number }}
        body: |
          ðŸŽŠ Solution imported!

  # Add a comment on the issue with the dev branch name and the Dataverse Dev environment information
  add-comment-on-issue:
    # Change "create-dataverse-dev-environment" for "import-solution-to-dev-environment" only after the initialization of the solution in the repository
    needs: [create-issue-development-branch, import-solution-to-dev-environment]
    runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    # Add "Workplace initialized" comment to the issue
    - name: Workplace initialized comment on issue
      uses: peter-evans/create-or-update-comment@v1
      with:
        issue-number: ${{ github.event.issue.number }}
        body: |
          # ðŸŽ† Workspace initialized!

          Branch: [**${{ env.branch_name }}**](${{ github.server.url }}/${{ github.repository }}/tree/${{ env.branch_name }})
          Dataverse Dev environment created: [**${{ env.dataverse_dev_environment_display_name }}**](https://${{ env.dataverse_dev_environment_domain_name }}${{ secrets.DATAVERSE_ENVIRONMENT_URL_BASE }})